@model NewsFeedViewModel

@{
    ViewData["Title"] = "For you - Freedle";
}

<div class="container mt-4">
    <h1 class="text-center fw-bold text-primary">Welcome to Freedle</h1>

    <div class="row mt-4">
        <div class="col-md-3 bg-light text-center p-3 rounded">
            <h5 class="fw-bold">Left Section</h5>
            <p>Coming soon...</p>
        </div>

        <div class="col-md-6">
            <h2 class="text-center fw-bold mb-4">Последни публикации</h2>

            @if (Model.Posts.Any())
            {
                @foreach (var post in Model.Posts)
                {
                    <div class="card mb-4 post-card">
                        <div class="card-header d-flex align-items-center">
                            <img src="@post.AuthorProfilePictureUrl" class="rounded-circle me-2" width="40" height="40" />
                            <strong>@post.AuthorName</strong>
                            <span class="text-muted ms-auto">@post.CreatedOn</span>
                        </div>

                        <div class="card-body d-flex flex-column align-items-center">
                            @if (!string.IsNullOrEmpty(post.ImageUrl))
                            {
                                <img src="@post.ImageUrl" class="rounded border border-8 border-dark shadow-lg mb-2"
                                     alt="Post image" style="max-width: 75%; height: auto; display: block; margin: auto;" />
                            }
                            <p class="card-text">@post.Content</p>
                        </div>

                        <div class="card-footer d-flex justify-content-between align-items-center">
                            <div class="d-flex align-items-center gap-2">
                                <form method="post" action="@Url.Action("ToggleLike", "Home")">
                                    @Html.AntiForgeryToken()
                                    <input type="hidden" name="postId" value="@post.Id" />
                                    <button type="submit" class="btn @(post.IsLikedByCurrentUser ? "btn-primary" : "btn-outline-primary") btn-sm">
                                        👍 <span class="like-count">@post.LikeCount</span>
                                    </button>
                                </form>
                                <a href="#" class="btn btn-outline-secondary btn-sm comment-btn" data-url="@Url.Action("PostDetails", "Home", new { id = post.Id })">💬 Comments</a>
                            </div>
                        </div>
                    </div>
                }
            }
            else
            {
                <p class="text-center text-muted">Все още няма публикации.</p>
            }
        </div>

        <div class="col-md-3 bg-light text-center p-3 rounded">
            <h5 class="fw-bold">Right Section</h5>
            <p>Coming soon...</p>
        </div>
    </div>
</div>

<!-- Anti-Forgery Token -->
@Html.AntiForgeryToken()


<script>
    document.addEventListener("DOMContentLoaded", function () {
        document.querySelectorAll(".comment-btn").forEach(button => {
            button.addEventListener("click", function (event) {
                event.preventDefault(); // Спира стандартния линк

                let isAuthenticated = @Json.Serialize(User.Identity.IsAuthenticated);

                if (isAuthenticated) {
                    window.location.href = this.dataset.url; // Пренасочване към PostDetails
                } else {
                    window.location.href = "/Identity/Account/Login"; // Пренасочване към Login
                }
            });
        });
    });
</script>
